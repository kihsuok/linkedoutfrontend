{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\linkedout\\\\client\\\\src\\\\components\\\\user\\\\JobBoard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport NavBar from './NavBar';\nimport JobCard from './JobCard';\nimport jwt from 'jsonwebtoken';\nimport './cssfiles/jobboard.css';\nimport loadingimage from '../../loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobBoard() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const nav = useNavigate();\n  useEffect(() => {\n    const checkAuthorization = () => {\n      console.log('AUTHENTICATING');\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        const user = jwt.decode(token);\n        console.log('USER WHILE AUTHENTICATING : ', user);\n\n        if (!user) {\n          localStorage.removeItem('token');\n          nav('/login');\n        } else {\n          setEmail(user.email);\n        }\n      } else nav('/login');\n    };\n\n    checkAuthorization();\n  }, [nav]);\n  const [jobCards, setJobCards] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [sortedJobs, setSortedJobs] = useState([]);\n  useEffect(() => {\n    async function fetchJobs() {\n      // Fetch jobs and order from server\n      const res = await axios.get('https://linkedoutbackend.onrender.com/user/jobs');\n      const returnedjobs = res.data.jobs;\n      const newres = await axios.get('https://linkedoutbackend.onrender.com/admin/getorder');\n      const order = newres.data.order; // Sort jobs according to order\n\n      const sortedJobs = [];\n      order.forEach(jobId => {\n        const job = returnedjobs.find(job => job.id === jobId);\n\n        if (job) {\n          sortedJobs.push(job);\n        }\n      }); // setLoading(true)\n      // Fetch applied jobs and filter out already applied jobs\n\n      const res2 = await axios.post(\"https://linkedoutbackend.onrender.com/user/applied-jobs\", {\n        email: email\n      }); // function fetchUnapplied(){\n      //   const appliedJobIds = res2.data.appliedJobs.map(job => job.id);\n      //   const unappliedJobs = sortedJobs.filter(job => !appliedJobIds.includes(job.id));\n      //   return unappliedJobs\n      // }\n\n      function fetchUnapplied() {\n        console.log(res2);\n        return sortedJobs.filter(job => !res2.data.appliedJobs.map(appliedJob => appliedJob.id).includes(job.id));\n      }\n\n      const unappliedJobs = fetchUnapplied();\n      console.log(unappliedJobs); // Update the state of jobs and jobCards\n\n      setJobs(sortedJobs);\n      setJobCards(unappliedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        id: job.id,\n        title: job.title,\n        location: job.location,\n        deadline: job.deadline,\n        contact: job.contact,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))); // setLoading(false)\n    }\n\n    fetchJobs();\n  }, [email]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobboard\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingimage,\n        alt: \"Loading...\",\n        style: {\n          marginTop: \"17%\",\n          marginLeft: \"49%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobboard\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cardholder\",\n      children: jobCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobBoard, \"8t2+s1kMxWz4RNrLKfvLwrHrYE0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = JobBoard;\nexport default JobBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","axios","useNavigate","useState","useEffect","NavBar","JobCard","jwt","loadingimage","JobBoard","email","setEmail","nav","checkAuthorization","console","log","token","localStorage","getItem","user","decode","removeItem","jobCards","setJobCards","jobs","setJobs","loading","setLoading","sortedJobs","setSortedJobs","fetchJobs","res","get","returnedjobs","data","newres","order","forEach","jobId","job","find","id","push","res2","post","fetchUnapplied","filter","appliedJobs","map","appliedJob","includes","unappliedJobs","title","location","deadline","contact","marginTop","marginLeft"],"sources":["C:/Projects/linkedout/client/src/components/user/JobBoard.js"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport NavBar from './NavBar'\r\nimport JobCard from './JobCard'\r\nimport jwt from 'jsonwebtoken'\r\nimport './cssfiles/jobboard.css'\r\nimport loadingimage from '../../loading.gif'\r\n\r\n\r\nfunction JobBoard () {\r\n  const [email, setEmail] = useState('')\r\n\r\n  const nav = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = () => {\r\n      console.log('AUTHENTICATING')\r\n      const token = localStorage.getItem('token')\r\n      if (token) {\r\n        const user = jwt.decode(token)\r\n        console.log('USER WHILE AUTHENTICATING : ', user)\r\n        if (!user) {\r\n          localStorage.removeItem('token')\r\n          nav('/login')\r\n        } else {\r\n          setEmail(user.email)\r\n        }\r\n      } else nav('/login')\r\n    }\r\n    checkAuthorization()\r\n  }, [nav])\r\n\r\n  const [jobCards, setJobCards] = useState([])\r\n  const [jobs, setJobs] = useState([])\r\n  const [loading,setLoading]=useState(false)  \r\n  const [sortedJobs, setSortedJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchJobs () {\r\n      // Fetch jobs and order from server\r\n      const res = await axios.get('https://linkedoutbackend.onrender.com/user/jobs')\r\n      const returnedjobs = res.data.jobs\r\n      const newres = await axios.get('https://linkedoutbackend.onrender.com/admin/getorder')\r\n      const order= newres.data.order;\r\n  \r\n      // Sort jobs according to order\r\n      const sortedJobs = [];\r\n      order.forEach((jobId) => {\r\n        const job = returnedjobs.find((job) => job.id === jobId);\r\n        if (job) {\r\n          sortedJobs.push(job);\r\n        }\r\n      });\r\n  \r\n      // setLoading(true)\r\n      // Fetch applied jobs and filter out already applied jobs\r\n\r\n      const res2 = await axios.post(\"https://linkedoutbackend.onrender.com/user/applied-jobs\", {email: email});\r\n\r\n\r\n      // function fetchUnapplied(){\r\n      //   const appliedJobIds = res2.data.appliedJobs.map(job => job.id);\r\n      //   const unappliedJobs = sortedJobs.filter(job => !appliedJobIds.includes(job.id));\r\n      //   return unappliedJobs\r\n      // }\r\n\r\n      function fetchUnapplied() {\r\n        console.log(res2)\r\n        return sortedJobs.filter(job => !res2.data.appliedJobs.map(appliedJob => appliedJob.id).includes(job.id));\r\n      }\r\n      \r\n\r\n      const unappliedJobs = fetchUnapplied()\r\n      console.log(unappliedJobs)\r\n\r\n      \r\n  \r\n      // Update the state of jobs and jobCards\r\n      setJobs(sortedJobs)\r\n      setJobCards(\r\n        unappliedJobs.map(job => (\r\n          <JobCard\r\n            id={job.id}\r\n            title={job.title}\r\n            location={job.location}\r\n            deadline={job.deadline}\r\n            contact={job.contact}\r\n            email={email}\r\n          />\r\n        ))\r\n      )\r\n      // setLoading(false)\r\n\r\n    }\r\n    \r\n\r\n    fetchJobs()\r\n  }, [email])\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"jobboard\">\r\n        <NavBar />\r\n        <img src={loadingimage} alt=\"Loading...\" style={{marginTop:\"17%\",marginLeft:\"49%\"}} />\r\n      </div>\r\n    )\r\n  } \r\n  \r\n\r\n  return (\r\n    <div className=\"jobboard\">\r\n      <NavBar />\r\n      <div id=\"cardholder\">{jobCards}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobBoard\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}