{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\linkedout\\\\client\\\\src\\\\components\\\\user\\\\JobBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport JobCard from './JobCard';\nimport jwt from 'jsonwebtoken';\nimport loadingimage from '../../loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobBoard() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [jobCards, setJobCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const nav = useNavigate();\n  useEffect(() => {\n    const checkAuthorization = async () => {\n      console.log('AUTHENTICATING');\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        const user = jwt.decode(token);\n        console.log('USER WHILE AUTHENTICATING : ', user);\n\n        if (!user) {\n          localStorage.removeItem('token');\n          nav('/login');\n        } else {\n          setEmail(user.email);\n        }\n      } else nav('/login');\n    };\n\n    checkAuthorization();\n  }, [nav]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        setLoading(true); // Fetch jobs and order from server\n\n        const res = await axios.get('https://linkedoutbackend.onrender.com/user/jobs');\n        const returnedjobs = res.data.jobs;\n        const newres = await axios.get('https://linkedoutbackend.onrender.com/admin/getorder');\n        const order = newres.data.order; // Sort jobs according to order\n\n        const sortedJobs = [];\n        order.forEach(jobId => {\n          const job = returnedjobs.find(job => job.id === jobId);\n\n          if (job) {\n            sortedJobs.push(job);\n          }\n        }); // Fetch applied jobs and filter out already applied jobs\n\n        const res2 = await axios.post('https://linkedoutbackend.onrender.com/user/applied-jobs', {\n          email: email\n        });\n        const appliedJobIds = res2.data.appliedJobs.map(job => job.id);\n        const unappliedJobs = sortedJobs.filter(job => !appliedJobIds.includes(job.id)); // Update the state of jobs and jobCards\n\n        setJobCards(unappliedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          id: job.id,\n          title: job.title,\n          location: job.location,\n          deadline: job.deadline,\n          contact: job.contact,\n          email: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)));\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, [email]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobboard\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingimage,\n        alt: \"Loading...\",\n        style: {\n          marginTop: '17%',\n          marginLeft: '49%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobboard\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cardholder\",\n      children: jobCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobBoard, \"NiNj6iXnR6qK2Zumf2b8uifvqS8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = JobBoard;\nexport default JobBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","NavBar","JobCard","jwt","loadingimage","JobBoard","email","setEmail","jobCards","setJobCards","loading","setLoading","nav","checkAuthorization","console","log","token","localStorage","getItem","user","decode","removeItem","fetchJobs","res","get","returnedjobs","data","jobs","newres","order","sortedJobs","forEach","jobId","job","find","id","push","res2","post","appliedJobIds","appliedJobs","map","unappliedJobs","filter","includes","title","location","deadline","contact","error","marginTop","marginLeft"],"sources":["C:/Projects/linkedout/client/src/components/user/JobBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport NavBar from './NavBar';\r\nimport JobCard from './JobCard';\r\nimport jwt from 'jsonwebtoken';\r\nimport loadingimage from '../../loading.gif';\r\n\r\nfunction JobBoard() {\r\n  const [email, setEmail] = useState('');\r\n  const [jobCards, setJobCards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = async () => {\r\n      console.log('AUTHENTICATING');\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const user = jwt.decode(token);\r\n        console.log('USER WHILE AUTHENTICATING : ', user);\r\n        if (!user) {\r\n          localStorage.removeItem('token');\r\n          nav('/login');\r\n        } else {\r\n          setEmail(user.email);\r\n        }\r\n      } else nav('/login');\r\n    };\r\n    checkAuthorization();\r\n  }, [nav]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Fetch jobs and order from server\r\n        const res = await axios.get('https://linkedoutbackend.onrender.com/user/jobs');\r\n        const returnedjobs = res.data.jobs;\r\n        const newres = await axios.get('https://linkedoutbackend.onrender.com/admin/getorder');\r\n        const order = newres.data.order;\r\n\r\n        // Sort jobs according to order\r\n        const sortedJobs = [];\r\n        order.forEach((jobId) => {\r\n          const job = returnedjobs.find((job) => job.id === jobId);\r\n          if (job) {\r\n            sortedJobs.push(job);\r\n          }\r\n        });\r\n\r\n        // Fetch applied jobs and filter out already applied jobs\r\n        const res2 = await axios.post('https://linkedoutbackend.onrender.com/user/applied-jobs', { email: email });\r\n        const appliedJobIds = res2.data.appliedJobs.map((job) => job.id);\r\n        const unappliedJobs = sortedJobs.filter((job) => !appliedJobIds.includes(job.id));\r\n\r\n        // Update the state of jobs and jobCards\r\n        setJobCards(\r\n          unappliedJobs.map((job) => (\r\n            <JobCard\r\n              id={job.id}\r\n              title={job.title}\r\n              location={job.location}\r\n              deadline={job.deadline}\r\n              contact={job.contact}\r\n              email={email}\r\n            />\r\n          ))\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [email]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"jobboard\">\r\n        <NavBar />\r\n        <img src={loadingimage} alt=\"Loading...\" style={{ marginTop: '17%', marginLeft: '49%' }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"jobboard\">\r\n      <NavBar />\r\n      <div id=\"cardholder\">{jobCards}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}