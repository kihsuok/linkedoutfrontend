{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\linkedout\\\\client\\\\src\\\\components\\\\admin\\\\AdminBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AdminNav from './AdminNav';\nimport JobCard from './AdminJobCard';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminBoard() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [jobCards, setJobCards] = useState([]);\n  const nav = useNavigate();\n  useEffect(() => {\n    const checkAuthorization = () => {\n      console.log('AUTHENTICATING');\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        const admin = jwt.decode(token);\n        console.log('USER WHILE AUTHENTICATING : ', admin);\n\n        if (!admin || !admin.isAdmin) {\n          localStorage.removeItem('token');\n          nav('/admin-login');\n        } else {\n          setEmail(admin.email);\n        }\n      } else nav('/admin-login');\n    };\n\n    checkAuthorization();\n  }, [nav]);\n  useEffect(() => {\n    async function fetchJobs() {\n      const res = await axios.get('http://localhost:3000/admin/jobs');\n      const jobs = res.data.jobs;\n      setJobCards(jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        id: job.id,\n        title: job.title,\n        location: job.location,\n        deadline: job.deadline,\n        contact: job.contact,\n        email: email,\n        archived: job.archived,\n        draggable: \"true\",\n        onDragStart: e => handleDragStart(e, job.id),\n        onDragOver: e => handleDragOver(e),\n        onDrop: e => handleDrop(e, job.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)));\n    }\n\n    fetchJobs();\n  }, [email]);\n\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData('text/plain', id);\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    const cardId = e.dataTransfer.getData('text/plain');\n    const cardIndex = jobCards.findIndex(jobCard => jobCard.props.id === parseInt(cardId));\n    const dropIndex = jobCards.findIndex(jobCard => jobCard.props.id === parseInt(id));\n    const newJobCards = [...jobCards];\n    const [removedCard] = newJobCards.splice(cardIndex, 1);\n    newJobCards.splice(dropIndex, 0, removedCard);\n    setJobCards(newJobCards);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminBoard, \"vObDrVRXxyYrJPoxvy8oc/2iIto=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AdminBoard;\nexport default AdminBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","AdminNav","JobCard","jwt","AdminBoard","email","setEmail","jobCards","setJobCards","nav","checkAuthorization","console","log","token","localStorage","getItem","admin","decode","isAdmin","removeItem","fetchJobs","res","get","jobs","data","map","job","id","title","location","deadline","contact","archived","e","handleDragStart","handleDragOver","handleDrop","dataTransfer","setData","preventDefault","dropEffect","cardId","getData","cardIndex","findIndex","jobCard","props","parseInt","dropIndex","newJobCards","removedCard","splice"],"sources":["C:/Projects/linkedout/client/src/components/admin/AdminBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdminNav from './AdminNav';\r\nimport JobCard from './AdminJobCard';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nfunction AdminBoard() {\r\n  const [email, setEmail] = useState('');\r\n  const [jobCards, setJobCards] = useState([]);\r\n\r\n  const nav = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = () => {\r\n      console.log('AUTHENTICATING');\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const admin = jwt.decode(token);\r\n        console.log('USER WHILE AUTHENTICATING : ', admin);\r\n        if (!admin || !admin.isAdmin) {\r\n          localStorage.removeItem('token');\r\n          nav('/admin-login');\r\n        } else {\r\n          setEmail(admin.email);\r\n        }\r\n      } else nav('/admin-login');\r\n    };\r\n    checkAuthorization();\r\n  }, [nav]);\r\n\r\n  useEffect(() => {\r\n    async function fetchJobs() {\r\n      const res = await axios.get('http://localhost:3000/admin/jobs');\r\n      const jobs = res.data.jobs;\r\n\r\n      setJobCards(\r\n        jobs.map((job) => (\r\n          <JobCard\r\n            id={job.id}\r\n            title={job.title}\r\n            location={job.location}\r\n            deadline={job.deadline}\r\n            contact={job.contact}\r\n            email={email}\r\n            archived={job.archived}\r\n            draggable=\"true\"\r\n            onDragStart={(e) => handleDragStart(e, job.id)}\r\n            onDragOver={(e) => handleDragOver(e)}\r\n            onDrop={(e) => handleDrop(e, job.id)}\r\n          />\r\n        ))\r\n      );\r\n    }\r\n\r\n    fetchJobs();\r\n  }, [email]);\r\n\r\n  const handleDragStart = (e, id) => {\r\n    e.dataTransfer.setData('text/plain', id);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n  };\r\n\r\n  const handleDrop = (e, id) => {\r\n    e.preventDefault();\r\n    const cardId = e.dataTransfer.getData('text/plain');\r\n    const cardIndex = jobCards.findIndex((jobCard) => jobCard.props.id === parseInt(cardId));\r\n    const dropIndex = jobCards.findIndex((jobCard) => jobCard.props.id === parseInt(id));\r\n    const newJobCards = [...jobCards];\r\n    const [removedCard] = newJobCards.splice(cardIndex, 1);\r\n    newJobCards.splice(dropIndex, 0, removedCard);\r\n    setJobCards(newJobCards);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminNav />\r\n      <div>{jobCards}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}