{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\linkedout\\\\client\\\\src\\\\components\\\\admin\\\\CreateJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AdminNav from './AdminNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateJob = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [location, setLocation] = useState('');\n  const [contact, setContact] = useState('');\n\n  async function registerUser(title, description, deadline, location, contact) {\n    const res = await fetch('http://localhost:3000/admin/createjob', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: req.body.id,\n        title: req.body.title,\n        description: req.body.description,\n        location: req.body.location,\n        deadline: req.body.deadline,\n        contact: req.body.contact,\n        appliedJobs: []\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n\n    if (data.status === 'ok') {\n      toast.success('Job created successfully!', {\n        theme: 'colored'\n      }); // Redirect the user to the sign-in page\n\n      nav('/admin-board');\n    } else {\n      toast.error('Failed to create job', {\n        theme: 'colored'\n      });\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log('SUBMITTED');\n    toast.success('Job Added', {\n      theme: 'colored'\n    });\n    AddJob(name, dob, email, phone, qualifications, experience, password);\n  } //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     // Do something with the form data, like send it to a server\n  //     console.log({\n  //       title,\n  //       description,\n  //       deadline,\n  //       location,\n  //       contact,\n  //     });\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Job Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Job Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deadline\",\n        children: \"Deadline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"deadline\",\n        value: deadline,\n        onChange: e => setDeadline(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"location\",\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"location\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contact\",\n        children: \"Contact:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"contact\",\n        value: contact,\n        onChange: e => setContact(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"AddJob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateJob, \"/3dteveijNneZ91ct/L0X8gPNwY=\");\n\n_c = CreateJob;\nexport default CreateJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateJob\");","map":{"version":3,"names":["React","useState","AdminNav","CreateJob","title","setTitle","description","setDescription","deadline","setDeadline","location","setLocation","contact","setContact","registerUser","res","fetch","method","headers","body","JSON","stringify","id","req","appliedJobs","data","json","console","log","status","toast","success","theme","nav","error","handleSubmit","event","preventDefault","AddJob","name","dob","email","phone","qualifications","experience","password","e","target","value"],"sources":["C:/Projects/linkedout/client/src/components/admin/CreateJob.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AdminNav from './AdminNav';\r\n\r\nconst CreateJob = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [deadline, setDeadline] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [contact, setContact] = useState('');\r\n\r\n  async function registerUser (\r\n    title,\r\n    description,\r\n    deadline,\r\n    location,\r\n    contact\r\n  ) {\r\n    const res = await fetch('http://localhost:3000/admin/createjob', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        id: req.body.id,\r\n        title: req.body.title,\r\n        description: req.body.description,\r\n        location: req.body.location,\r\n        deadline: req.body.deadline,\r\n        contact: req.body.contact,\r\n        appliedJobs: []\r\n      })\r\n    })\r\n\r\n    const data = await res.json()\r\n    console.log(data)\r\n\r\n    if (data.status === 'ok') {\r\n      toast.success('Job created successfully!', { theme: 'colored' })\r\n      // Redirect the user to the sign-in page\r\n      nav('/admin-board')\r\n    } else {\r\n      toast.error('Failed to create job', { theme: 'colored' })\r\n    }\r\n  }\r\n\r\n  async function handleSubmit (event) {\r\n    event.preventDefault()\r\n\r\n    console.log('SUBMITTED')\r\n    toast.success('Job Added', { theme: 'colored' })\r\n\r\n    AddJob(name, dob, email, phone, qualifications, experience, password)\r\n  }\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // Do something with the form data, like send it to a server\r\n\r\n//     console.log({\r\n//       title,\r\n//       description,\r\n//       deadline,\r\n//       location,\r\n//       contact,\r\n//     });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n    <AdminNav />\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"title\">Job Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n\r\n      <label htmlFor=\"description\">Job Description:</label>\r\n      <textarea\r\n        id=\"description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      ></textarea>\r\n\r\n      <label htmlFor=\"deadline\">Deadline:</label>\r\n      <input\r\n        type=\"date\"\r\n        id=\"deadline\"\r\n        value={deadline}\r\n        onChange={(e) => setDeadline(e.target.value)}\r\n      />\r\n\r\n      <label htmlFor=\"location\">Location:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"location\"\r\n        value={location}\r\n        onChange={(e) => setLocation(e.target.value)}\r\n      />\r\n\r\n      <label htmlFor=\"contact\">Contact:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"contact\"\r\n        value={contact}\r\n        onChange={(e) => setContact(e.target.value)}\r\n      />\r\n\r\n      <button type=\"submit\">AddJob</button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateJob;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}