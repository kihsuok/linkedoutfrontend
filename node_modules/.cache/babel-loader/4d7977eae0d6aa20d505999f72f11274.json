{"ast":null,"code":"import _regeneratorRuntime from\"C:/Projects/linkedout/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Projects/linkedout/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Projects/linkedout/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{useState,useEffect}from'react';import NavBar from'./NavBar';import JobCard from'./JobCard';import jwt from'jsonwebtoken';import'./cssfiles/jobboard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function JobBoard(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var nav=useNavigate();useEffect(function(){var checkAuthorization=function checkAuthorization(){console.log('AUTHENTICATING');var token=localStorage.getItem('token');if(token){var user=jwt.decode(token);console.log('USER WHILE AUTHENTICATING : ',user);if(!user){localStorage.removeItem('token');nav('/login');}else{setEmail(user.email);}}else nav('/login');};checkAuthorization();},[nav]);var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),jobCards=_useState4[0],setJobCards=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),jobs=_useState6[0],setJobs=_useState6[1];// useEffect(() => {\n//   async function fetchJobs () {\n//     const res = await axios.get('http://localhost:3000/user/jobs')\n//     const returnedjobs = res.data.jobs\n//     const newres = await axios.get('http://localhost:3000/admin/getorder')\n//     const order= newres.data.order;\n//     console.log(order);\n//     console.log(\"returned\",returnedjobs);\n//     const sortedJobs = [];\n//     order.forEach((jobId) => {\n//       const job = returnedjobs.find((job) => job.id === jobId);\n//       if (job) {\n//         sortedJobs.push(job);\n//       }\n//     });\n//     setJobs(sortedJobs)\n//     const res2 = await axios.post(\"http://localhost:3000/user/applied-jobs\", {email: email});\n//     const appliedJobIds = res2.data.appliedJobs.map(job => job.id);\n//     console.log(\"applied:\" , appliedJobIds);\n//     console.log(\"jobs:\", jobs);\n//     var b = new Set(appliedJobIds)\n//     var unappliedJobs = [...jobs].filter(x => ! b.has(x.id));\n//     // appliedJobs=jobs-appliedJobs\n//     setJobCards(\n//       unappliedJobs.map(job => (\n//         <JobCard\n//           id={job.id}\n//           title={job.title}\n//           location={job.location}\n//           deadline={job.deadline}\n//           contact={job.contact}\n//           email={email}\n//           archived={job.archived}\n//           hasApplied={false}\n//         />\n//       ))\n//     )\n//   setJobCards(\n//     unappliedJobs.map(job => (\n//       <JobCard\n//         id={job.id}\n//         title={job.title}\n//         location={job.location}\n//         deadline={job.deadline}\n//         contact={job.contact}\n//         email={email}\n//       />\n//     ))\n//   )}\n//   fetchJobs()\n// }, [email,jobs])\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),sortedJobs=_useState8[0],setSortedJobs=_useState8[1];useEffect(function(){function fetchJobs(){return _fetchJobs.apply(this,arguments);}function _fetchJobs(){_fetchJobs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res,returnedjobs,newres,order,sortedJobs,res2,appliedJobIds,unappliedJobs;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://linkedoutbackend.onrender.com/user/jobs');case 2:res=_context.sent;returnedjobs=res.data.jobs;_context.next=6;return axios.get('https://linkedoutbackend.onrender.com/admin/getorder');case 6:newres=_context.sent;order=newres.data.order;// Sort jobs according to order\nsortedJobs=[];order.forEach(function(jobId){var job=returnedjobs.find(function(job){return job.id===jobId;});if(job){sortedJobs.push(job);}});// Fetch applied jobs and filter out already applied jobs\n_context.next=12;return axios.post(\"https://linkedoutbackend.onrender.com/user/applied-jobs\",{email:email});case 12:res2=_context.sent;appliedJobIds=res2.data.appliedJobs.map(function(job){return job.id;});unappliedJobs=sortedJobs.filter(function(job){return!appliedJobIds.includes(job.id);});// Update the state of jobs and jobCards\nsetJobs(sortedJobs);setJobCards(unappliedJobs.map(function(job){return/*#__PURE__*/_jsx(JobCard,{id:job.id,title:job.title,location:job.location,deadline:job.deadline,contact:job.contact,email:email});}));case 17:case\"end\":return _context.stop();}}},_callee);}));return _fetchJobs.apply(this,arguments);}fetchJobs();},[email,sortedJobs]);return/*#__PURE__*/_jsxs(\"div\",{className:\"jobboard\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{id:\"cardholder\",children:jobCards})]});}export default JobBoard;","map":{"version":3,"names":["React","axios","useNavigate","useState","useEffect","NavBar","JobCard","jwt","JobBoard","email","setEmail","nav","checkAuthorization","console","log","token","localStorage","getItem","user","decode","removeItem","jobCards","setJobCards","jobs","setJobs","sortedJobs","setSortedJobs","fetchJobs","get","res","returnedjobs","data","newres","order","forEach","jobId","job","find","id","push","post","res2","appliedJobIds","appliedJobs","map","unappliedJobs","filter","includes","title","location","deadline","contact"],"sources":["C:/Projects/linkedout/client/src/components/user/JobBoard.js"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport NavBar from './NavBar'\r\nimport JobCard from './JobCard'\r\nimport jwt from 'jsonwebtoken'\r\nimport './cssfiles/jobboard.css'\r\n\r\n\r\nfunction JobBoard () {\r\n  const [email, setEmail] = useState('')\r\n\r\n  const nav = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = () => {\r\n      console.log('AUTHENTICATING')\r\n      const token = localStorage.getItem('token')\r\n      if (token) {\r\n        const user = jwt.decode(token)\r\n        console.log('USER WHILE AUTHENTICATING : ', user)\r\n        if (!user) {\r\n          localStorage.removeItem('token')\r\n          nav('/login')\r\n        } else {\r\n          setEmail(user.email)\r\n        }\r\n      } else nav('/login')\r\n    }\r\n    checkAuthorization()\r\n  }, [nav])\r\n\r\n  const [jobCards, setJobCards] = useState([])\r\n  const [jobs, setJobs] = useState([])\r\n\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchJobs () {\r\n  //     const res = await axios.get('http://localhost:3000/user/jobs')\r\n  //     const returnedjobs = res.data.jobs\r\n  //     const newres = await axios.get('http://localhost:3000/admin/getorder')\r\n  //     const order= newres.data.order;\r\n  //     console.log(order);\r\n  //     console.log(\"returned\",returnedjobs);\r\n  //     const sortedJobs = [];\r\n\r\n  //     order.forEach((jobId) => {\r\n  //       const job = returnedjobs.find((job) => job.id === jobId);\r\n  //       if (job) {\r\n  //         sortedJobs.push(job);\r\n  //       }\r\n  //     });\r\n      \r\n  //     setJobs(sortedJobs)\r\n\r\n  //     const res2 = await axios.post(\"http://localhost:3000/user/applied-jobs\", {email: email});\r\n  //     const appliedJobIds = res2.data.appliedJobs.map(job => job.id);\r\n\r\n  //     console.log(\"applied:\" , appliedJobIds);\r\n  //     console.log(\"jobs:\", jobs);\r\n\r\n  //     var b = new Set(appliedJobIds)\r\n  //     var unappliedJobs = [...jobs].filter(x => ! b.has(x.id));\r\n\r\n  //     // appliedJobs=jobs-appliedJobs\r\n  //     setJobCards(\r\n  //       unappliedJobs.map(job => (\r\n  //         <JobCard\r\n  //           id={job.id}\r\n  //           title={job.title}\r\n  //           location={job.location}\r\n  //           deadline={job.deadline}\r\n  //           contact={job.contact}\r\n  //           email={email}\r\n  //           archived={job.archived}\r\n  //           hasApplied={false}\r\n  //         />\r\n  //       ))\r\n  //     )\r\n\r\n\r\n  //   setJobCards(\r\n  //     unappliedJobs.map(job => (\r\n  //       <JobCard\r\n  //         id={job.id}\r\n  //         title={job.title}\r\n  //         location={job.location}\r\n  //         deadline={job.deadline}\r\n  //         contact={job.contact}\r\n  //         email={email}\r\n  //       />\r\n  //     ))\r\n  //   )}\r\n  \r\n\r\n  //   fetchJobs()\r\n  // }, [email,jobs])\r\n  \r\n  const [sortedJobs, setSortedJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchJobs () {\r\n      // Fetch jobs and order from server\r\n      const res = await axios.get('https://linkedoutbackend.onrender.com/user/jobs')\r\n      const returnedjobs = res.data.jobs\r\n      const newres = await axios.get('https://linkedoutbackend.onrender.com/admin/getorder')\r\n      const order= newres.data.order;\r\n  \r\n      // Sort jobs according to order\r\n      const sortedJobs = [];\r\n      order.forEach((jobId) => {\r\n        const job = returnedjobs.find((job) => job.id === jobId);\r\n        if (job) {\r\n          sortedJobs.push(job);\r\n        }\r\n      });\r\n  \r\n      // Fetch applied jobs and filter out already applied jobs\r\n      const res2 = await axios.post(\"https://linkedoutbackend.onrender.com/user/applied-jobs\", {email: email});\r\n      const appliedJobIds = res2.data.appliedJobs.map(job => job.id);\r\n      const unappliedJobs = sortedJobs.filter(job => !appliedJobIds.includes(job.id));\r\n  \r\n      // Update the state of jobs and jobCards\r\n      setJobs(sortedJobs)\r\n      setJobCards(\r\n        unappliedJobs.map(job => (\r\n          <JobCard\r\n            id={job.id}\r\n            title={job.title}\r\n            location={job.location}\r\n            deadline={job.deadline}\r\n            contact={job.contact}\r\n            email={email}\r\n          />\r\n        ))\r\n      )\r\n    }\r\n  \r\n    fetchJobs()\r\n  }, [email, sortedJobs])\r\n  \r\n\r\n  return (\r\n    <div className=\"jobboard\">\r\n      <NavBar />\r\n      <div id=\"cardholder\">{jobCards}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobBoard\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}