{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\linkedout\\\\client\\\\src\\\\components\\\\JobBoard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport NavBar from './NavBar';\nimport JobCard from './JobCard';\nimport jwt from \"jsonwebtoken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobBoard() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const nav = useNavigate();\n  useEffect(() => {\n    const checkAuthorization = () => {\n      console.log(\"AUTHENTICATING\");\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        const user = jwt.decode(token);\n        console.log(\"USER WHILE AUTHENTICATING : \", user);\n\n        if (!user) {\n          localStorage.removeItem(\"token\");\n          nav(\"/login\");\n        } else {\n          setEmail(user.email);\n        }\n      } else nav(\"/login\");\n    };\n\n    checkAuthorization();\n  }, [nav]);\n  const [jobCards, setJobCards] = useState([]);\n\n  async function fetchJobs() {\n    const res = await axios.get(\"http://localhost:3000/user/jobs\");\n    const jobs = res.data.jobs;\n    setJobCards(jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      id: job.id,\n      title: job.title,\n      location: job.location,\n      deadline: job.deadline,\n      contact: job.contact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }, this)));\n  }\n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobBoard, \"BXe0pQng+JOTS7RtroCbj6Wos/E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = JobBoard;\nexport default JobBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","axios","useNavigate","Link","useState","useEffect","NavBar","JobCard","jwt","JobBoard","email","setEmail","nav","checkAuthorization","console","log","token","localStorage","getItem","user","decode","removeItem","jobCards","setJobCards","fetchJobs","res","get","jobs","data","map","job","id","title","location","deadline","contact"],"sources":["C:/Projects/linkedout/client/src/components/JobBoard.js"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport {useState, useEffect} from 'react';\r\nimport NavBar from './NavBar'\r\nimport JobCard from './JobCard'\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nfunction JobBoard () {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const nav = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = () => {\r\n      console.log(\"AUTHENTICATING\");\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        const user = jwt.decode(token);\r\n        console.log(\"USER WHILE AUTHENTICATING : \", user);\r\n        if (!user) {\r\n          localStorage.removeItem(\"token\");\r\n          nav(\"/login\");\r\n        }\r\n        else {\r\n          setEmail(user.email);\r\n        }\r\n      }\r\n      else nav(\"/login\");\r\n    };\r\n    checkAuthorization();\r\n  }, [nav]);\r\n\r\n  const [jobCards, setJobCards] = useState([]);\r\n\r\n  async function fetchJobs() {\r\n    const res = await axios.get(\"http://localhost:3000/user/jobs\");\r\n    const jobs = res.data.jobs;\r\n    setJobCards(jobs.map(job =>    <JobCard\r\n      id={job.id}\r\n      title={job.title}\r\n      location={job.location}\r\n      deadline={job.deadline}\r\n      contact={job.contact}\r\n    />));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div>{jobCards}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobBoard\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,SAASC,QAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAMQ,GAAG,GAAGV,WAAW,EAAvB;EAEAG,SAAS,CAAC,MAAM;IACd,MAAMQ,kBAAkB,GAAG,MAAM;MAC/BC,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;MACA,IAAIF,KAAJ,EAAW;QACT,MAAMG,IAAI,GAAGX,GAAG,CAACY,MAAJ,CAAWJ,KAAX,CAAb;QACAF,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CI,IAA5C;;QACA,IAAI,CAACA,IAAL,EAAW;UACTF,YAAY,CAACI,UAAb,CAAwB,OAAxB;UACAT,GAAG,CAAC,QAAD,CAAH;QACD,CAHD,MAIK;UACHD,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;QACD;MACF,CAVD,MAWKE,GAAG,CAAC,QAAD,CAAH;IACN,CAfD;;IAgBAC,kBAAkB;EACnB,CAlBQ,EAkBN,CAACD,GAAD,CAlBM,CAAT;EAoBA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;;EAEA,eAAeoB,SAAf,GAA2B;IACzB,MAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,iCAAV,CAAlB;IACA,MAAMC,IAAI,GAAGF,GAAG,CAACG,IAAJ,CAASD,IAAtB;IACAJ,WAAW,CAACI,IAAI,CAACE,GAAL,CAASC,GAAG,iBAAO,QAAC,OAAD;MAC7B,EAAE,EAAEA,GAAG,CAACC,EADqB;MAE7B,KAAK,EAAED,GAAG,CAACE,KAFkB;MAG7B,QAAQ,EAAEF,GAAG,CAACG,QAHe;MAI7B,QAAQ,EAAEH,GAAG,CAACI,QAJe;MAK7B,OAAO,EAAEJ,GAAG,CAACK;IALgB;MAAA;MAAA;MAAA;IAAA,QAAnB,CAAD,CAAX;EAOD;;EAED9B,SAAS,CAAC,MAAM;IACdmB,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMF;IAAN;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAjDQb,Q;UAGKP,W;;;KAHLO,Q;AAmDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}