{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\linkedout\\\\client\\\\src\\\\components\\\\admin\\\\AdminBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AdminNav from './AdminNav';\nimport JobCard from './AdminJobCard';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminBoard() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [jobCardsOrder, setJobCardsOrder] = useState([]);\n  const [jobCards, setJobCards] = useState([]);\n  const nav = useNavigate();\n  useEffect(() => {\n    const checkAuthorization = () => {\n      console.log('AUTHENTICATING');\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        const admin = jwt.decode(token);\n        console.log('USER WHILE AUTHENTICATING : ', admin);\n\n        if (!admin || !admin.isAdmin) {\n          localStorage.removeItem('token');\n          nav('/admin-login');\n        } else {\n          setEmail(admin.email);\n        }\n      } else nav('/admin-login');\n    };\n\n    checkAuthorization();\n  }, [nav]);\n  useEffect(() => {\n    async function fetchJobs() {\n      const res = await axios.get('http://localhost:3000/admin/jobs');\n      const jobs = res.data.jobs;\n      setJobCardsOrder(jobs.map(job => job.id));\n      setJobCards(jobCardsOrder.map(id => {\n        const job = jobs.find(job => job.id === id);\n        return /*#__PURE__*/_jsxDEV(JobCard, {\n          id: job.id,\n          title: job.title,\n          location: job.location,\n          deadline: job.deadline,\n          contact: job.contact,\n          email: email,\n          archived: job.archived,\n          handleDragStart: handleDragStart,\n          handleDragOver: handleDragOver,\n          handleDrop: handleDrop\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      }));\n    }\n\n    fetchJobs();\n  }, [email, jobCardsOrder]);\n\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData('id', id);\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e, newOrder) => {\n    const id = e.dataTransfer.getData('id');\n    const currentIndex = jobCardsOrder.indexOf(id);\n    const newIndex = newOrder.indexOf(id);\n\n    if (currentIndex !== newIndex) {\n      const newJobCardsOrder = [...jobCardsOrder];\n      newJobCardsOrder.splice(currentIndex, 1);\n      newJobCardsOrder.splice(newIndex, 0, id);\n      setJobCardsOrder(newJobCardsOrder);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminBoard, \"i5fR9cr7fxvxP+Z5C+hHbiPHYEQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AdminBoard;\nexport default AdminBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","AdminNav","JobCard","jwt","AdminBoard","email","setEmail","jobCardsOrder","setJobCardsOrder","jobCards","setJobCards","nav","checkAuthorization","console","log","token","localStorage","getItem","admin","decode","isAdmin","removeItem","fetchJobs","res","get","jobs","data","map","job","id","find","title","location","deadline","contact","archived","handleDragStart","handleDragOver","handleDrop","e","dataTransfer","setData","preventDefault","newOrder","getData","currentIndex","indexOf","newIndex","newJobCardsOrder","splice"],"sources":["C:/Projects/linkedout/client/src/components/admin/AdminBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdminNav from './AdminNav';\r\nimport JobCard from './AdminJobCard';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nfunction AdminBoard() {\r\n  const [email, setEmail] = useState('');\r\n  const [jobCardsOrder, setJobCardsOrder] = useState([]);\r\n  const [jobCards, setJobCards] = useState([]);\r\n  const nav = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = () => {\r\n      console.log('AUTHENTICATING');\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const admin = jwt.decode(token);\r\n        console.log('USER WHILE AUTHENTICATING : ', admin);\r\n        if (!admin || !admin.isAdmin) {\r\n          localStorage.removeItem('token');\r\n          nav('/admin-login');\r\n        } else {\r\n          setEmail(admin.email);\r\n        }\r\n      } else nav('/admin-login');\r\n    };\r\n    checkAuthorization();\r\n  }, [nav]);\r\n\r\n  useEffect(() => {\r\n    async function fetchJobs() {\r\n      const res = await axios.get('http://localhost:3000/admin/jobs');\r\n      const jobs = res.data.jobs;\r\n      setJobCardsOrder(jobs.map((job) => job.id));\r\n      setJobCards(\r\n        jobCardsOrder.map((id) => {\r\n          const job = jobs.find((job) => job.id === id);\r\n          return (\r\n            <JobCard\r\n              key={job.id}\r\n              id={job.id}\r\n              title={job.title}\r\n              location={job.location}\r\n              deadline={job.deadline}\r\n              contact={job.contact}\r\n              email={email}\r\n              archived={job.archived}\r\n              handleDragStart={handleDragStart}\r\n              handleDragOver={handleDragOver}\r\n              handleDrop={handleDrop}\r\n            />\r\n          );\r\n        })\r\n      );\r\n    }\r\n\r\n    fetchJobs();\r\n  }, [email, jobCardsOrder]);\r\n\r\n  const handleDragStart = (e, id) => {\r\n    e.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (e, newOrder) => {\r\n    const id = e.dataTransfer.getData('id');\r\n    const currentIndex = jobCardsOrder.indexOf(id);\r\n    const newIndex = newOrder.indexOf(id);\r\n\r\n    if (currentIndex !== newIndex) {\r\n      const newJobCardsOrder = [...jobCardsOrder];\r\n      newJobCardsOrder.splice(currentIndex, 1);\r\n      newJobCardsOrder.splice(newIndex, 0, id);\r\n      setJobCardsOrder(newJobCardsOrder);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminNav />\r\n      <div>{jobCards}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}