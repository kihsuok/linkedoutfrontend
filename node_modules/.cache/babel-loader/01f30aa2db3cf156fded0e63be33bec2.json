{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\linkedout\\\\client\\\\src\\\\components\\\\JobBoard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport NavBar from './NavBar';\nimport JobCard from './JobCard';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobBoard() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const nav = useNavigate();\n  useEffect(() => {\n    const checkAuthorization = () => {\n      console.log('AUTHENTICATING');\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        const user = jwt.decode(token);\n        console.log('USER WHILE AUTHENTICATING : ', user);\n\n        if (!user) {\n          localStorage.removeItem('token');\n          nav('/login');\n        } else {\n          setEmail(user.email);\n        }\n      } else nav('/login');\n    };\n\n    checkAuthorization();\n  }, [nav]);\n  const [jobCards, setJobCards] = useState([]);\n  useEffect(() => {\n    async function fetchJobs() {\n      const res = await axios.get('http://localhost:3000/user/jobs');\n      const jobs = res.data.jobs;\n      const res2 = await axios.post(\"http://localhost:3000/user/applied-jobs\", {\n        email: email\n      });\n      const appliedJobs = res2.data.appliedJobs;\n      var b = new Set(appliedJobs);\n      var unappliedJobs = [...jobs].filter(x => !b.has(x)); // appliedJobs=jobs-appliedJobs\n\n      setJobCards(unappliedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        id: job.id,\n        title: job.title,\n        location: job.location,\n        deadline: job.deadline,\n        contact: job.contact,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)));\n      setJobCards(jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        id: job.id,\n        title: job.title,\n        location: job.location,\n        deadline: job.deadline,\n        contact: job.contact,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)));\n    }\n\n    fetchJobs();\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobBoard, \"NiYmdWzMtHGBDb1QpPwLEHFF4wo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = JobBoard;\nexport default JobBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","axios","useNavigate","Link","useState","useEffect","NavBar","JobCard","jwt","JobBoard","email","setEmail","nav","checkAuthorization","console","log","token","localStorage","getItem","user","decode","removeItem","jobCards","setJobCards","fetchJobs","res","get","jobs","data","res2","post","appliedJobs","b","Set","unappliedJobs","filter","x","has","map","job","id","title","location","deadline","contact"],"sources":["C:/Projects/linkedout/client/src/components/JobBoard.js"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport NavBar from './NavBar'\r\nimport JobCard from './JobCard'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n\r\nfunction JobBoard () {\r\n  const [email, setEmail] = useState('')\r\n\r\n  const nav = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = () => {\r\n      console.log('AUTHENTICATING')\r\n      const token = localStorage.getItem('token')\r\n      if (token) {\r\n        const user = jwt.decode(token)\r\n        console.log('USER WHILE AUTHENTICATING : ', user)\r\n        if (!user) {\r\n          localStorage.removeItem('token')\r\n          nav('/login')\r\n        } else {\r\n          setEmail(user.email)\r\n        }\r\n      } else nav('/login')\r\n    }\r\n    checkAuthorization()\r\n  }, [nav])\r\n\r\n  const [jobCards, setJobCards] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchJobs () {\r\n      const res = await axios.get('http://localhost:3000/user/jobs')\r\n      const jobs = res.data.jobs\r\n\r\n      const res2 = await axios.post(\"http://localhost:3000/user/applied-jobs\", {email: email});\r\n      const appliedJobs = res2.data.appliedJobs;\r\n\r\n      var b = new Set(appliedJobs)\r\n      var unappliedJobs = [...jobs].filter(x => ! b.has(x));\r\n\r\n      // appliedJobs=jobs-appliedJobs\r\n      setJobCards(\r\n        unappliedJobs.map(job => (\r\n          <JobCard\r\n            id={job.id}\r\n            title={job.title}\r\n            location={job.location}\r\n            deadline={job.deadline}\r\n            contact={job.contact}\r\n            email={email}\r\n          />\r\n        ))\r\n      )\r\n\r\n\r\n    setJobCards(\r\n      jobs.map(job => (\r\n        <JobCard\r\n          id={job.id}\r\n          title={job.title}\r\n          location={job.location}\r\n          deadline={job.deadline}\r\n          contact={job.contact}\r\n          email={email}\r\n        />\r\n      ))\r\n    )}\r\n  \r\n\r\n    fetchJobs()\r\n  }, [email])\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div>{jobCards}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobBoard\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}